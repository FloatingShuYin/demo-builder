// Generated by CoffeeScript 1.9.3
var _builder, _cfg, _cfgData, _cfgFile, build, color, fs, gulp, gutil, path, setting;

fs = require('fs');

path = require('path');

gulp = require('gulp');

gutil = require('gulp-util');

color = gutil.colors;

_cfgFile = path.join(process.env.INIT_CWD, 'config.json');

if (!fs.existsSync(_cfgFile)) {
  gutil.log(color.yellow("config.json is missing!"));
  _cfg = require('./lib/data/default.json');
  _cfgData = JSON.stringify(_cfg, null, 4);
  fs.writeFileSync(_cfgFile, _cfgData, 'utf8');
  gulp.task('default', [], function() {
    gutil.log(color.yellow("config.json rebuild success!"));
    return gutil.log(color.green("Run Gulp Task again! Plz..."));
  });
  return false;
}

setting = require('./lib/setting');

build = require('./lib/build');


/*
 * ************* 初始化 *************
 */

gulp.task('init', function() {
  return build.init();
});


/*
 * ************* 构建任务 *************
 */

gulp.task('init', function() {
  return build.init();
});

gulp.task('less', function() {
  return build.less2css();
});

gulp.task('css', function() {
  return build.css2dist();
});

gulp.task('js', function() {
  return build.js2dist();
});

gulp.task('img', function() {
  return build.img2dist();
});

gulp.task('tpl', function() {
  return build.tpl2dist();
});

gulp.task('watch', function() {
  return build.watch();
});

gulp.task('server', function() {
  return build.server();
});

_builder = function(cb) {
  return build.img2dist(function() {
    return build.less2css(function() {
      return build.js2dist(function() {
        return build.css2dist(function() {
          return build.tpl2dist(function() {
            return cb();
          });
        });
      });
    });
  });
};

gulp.task('dev', function() {
  return build.less2css(function() {
    return build.tpl2dist(function() {
      return build.js2dist(function() {
        return gulp.start(['watch', 'server']);
      });
    });
  });
});

gulp.task('release', function() {
  var _startTime;
  _startTime = (new Date()).getTime();
  return _builder(function() {
    var _endTime;
    _endTime = (new Date()).getTime();
    gutil.log(color.cyan("耗时：" + (_endTime - _startTime) / 1000 + "s..."));
    return gutil.log(color.cyan("Finished release."));
  });
});

gulp.task('default', function() {
  if (setting.env === 'dev') {
    return gulp.start('dev');
  } else {
    return gulp.start('release');
  }
});
